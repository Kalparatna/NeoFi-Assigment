# Generated by Django 5.0.2 on 2025-05-20 17:02

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models

class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('location', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_recurring', models.BooleanField(default=False)),
                ('recurrence_pattern', models.JSONField(blank=True, null=True)),
                ('version', models.IntegerField(default=1)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='EventConflict',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detected_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_status', models.CharField(choices=[('PENDING', 'Pending'), ('RESOLVED', 'Resolved'), ('IGNORED', 'Ignored')], default='PENDING', max_length=10)),
                ('resolution_notes', models.TextField(blank=True)),
                ('conflicting_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conflicted_by', to='events.event')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conflicts', to='events.event')),
                ('resolved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_conflicts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EventPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('OWNER', 'Owner'), ('EDITOR', 'Editor'), ('VIEWER', 'Viewer')], default='VIEWER', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permissions', to='events.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_permissions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EventVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version_number', models.IntegerField()),
                ('data', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('change_reason', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='events.event')),
            ],
            options={
                'ordering': ['-version_number'],
            },
        ),
        migrations.CreateModel(
            name='EventChangeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_type', models.CharField(choices=[('CREATE', 'Create'), ('UPDATE', 'Update'), ('DELETE', 'Delete'), ('SHARE', 'Share'), ('PERMISSION_CHANGE', 'Permission Change')], max_length=20)),
                ('changed_at', models.DateTimeField(auto_now_add=True)),
                ('changes', models.JSONField()),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('changed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='changelog', to='events.event')),
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='changelog_entries', to='events.eventversion')),
            ],
            options={
                'ordering': ['-changed_at'],
            },
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['start_time', 'end_time'], name='events_even_start_t_0e446b_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['created_by'], name='events_even_created_95418c_idx'),
        ),
        migrations.AddIndex(
            model_name='eventconflict',
            index=models.Index(fields=['event', 'conflicting_event'], name='events_even_event_i_2b4506_idx'),
        ),
        migrations.AddIndex(
            model_name='eventconflict',
            index=models.Index(fields=['resolution_status'], name='events_even_resolut_e168c0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='eventconflict',
            unique_together={('event', 'conflicting_event')},
        ),
        migrations.AddIndex(
            model_name='eventpermission',
            index=models.Index(fields=['event', 'user'], name='events_even_event_i_74cbca_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='eventpermission',
            unique_together={('event', 'user')},
        ),
        migrations.AddIndex(
            model_name='eventversion',
            index=models.Index(fields=['event', 'version_number'], name='events_even_event_i_ed8d75_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='eventversion',
            unique_together={('event', 'version_number')},
        ),
        migrations.AddIndex(
            model_name='eventchangelog',
            index=models.Index(fields=['event', 'changed_at'], name='events_even_event_i_50c1e1_idx'),
        ),
        migrations.AddIndex(
            model_name='eventchangelog',
            index=models.Index(fields=['change_type'], name='events_even_change__d2cf29_idx'),
        ),
    ]
